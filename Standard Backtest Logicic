//@version=4
strategy(title="UPDATE TITLE",initial_capital=2500,default_qty_type=strategy.percent_of_equity,default_qty_value=5)

//Only Long trades
strategy.risk.allow_entry_in(strategy.direction.long)

////////////////////
///*****TRADE LOGIC
///////////////////


//Buy Signal
buySignal = 

//Sell Signal
sellSignal = 

// Set trade entry conditions
enterLong  = 
enterShort = 


////////////////////
///*****DATE LOGIC
///////////////////


// STEP 1:
// Make input options that configure backtest date range
startDate = input(title="Starting Day", type=input.integer,
     defval=1, minval=1, maxval=31)
startMonth = input(title="Start Month", type=input.integer,
     defval=4, minval=1, maxval=12)
startYear = input(title="Start Year", type=input.integer,
     defval=2021, minval=1800, maxval=2100)

endDate = input(title="End Day", type=input.integer,
     defval=1, minval=1, maxval=31)
endMonth = input(title="End Month", type=input.integer,
     defval=7, minval=1, maxval=12)
endYear = input(title="End Year", type=input.integer,
     defval=2025, minval=1800, maxval=2100)

// STEP 2:
// Look if the close time of the current bar
// falls inside the date range
inDateRange = (time >= timestamp(syminfo.timezone, startYear,
         startMonth, startDate, 0, 0)) and
     (time < timestamp(syminfo.timezone, endYear, endMonth, endDate, 0, 0))

// STEP 3:
// Submit entry orders, but only when bar is inside date range
if (inDateRange and buySignal)
    strategy.entry(id="EL", long=true)

if (inDateRange and sellSignal)
    strategy.entry(id="ES", long=false)

// STEP 4:
// Exit open market position when date range ends
if (not inDateRange)
    strategy.close_all()

//Place trades
//strategy.entry(id="buy", long=true, when=buySignal)

//strategy.entry(id="Short Entry", long=false, when=sellSignal)

plot(strategy.equity)
